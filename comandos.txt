//Creando base de datos
use ecommerce
// Creando coleccion productos y mensajes
db.createCollection("productos")
db.createCollection("mensajes")
<------ Puntos de la consigna ------>

* Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB. *

// Productos
db.productos.insertMany([{title: 'regla', price: 100},{title: 'mochila', price: 300},{title: 'lapiz', price: 2750},{title: 'cuaderno', price: 250},{title: 'escuadra', price: 730},{title: 'libreta', price: 1990},{title: 'pluma', price: 275},{title: 'bolso', price: 1500},{title: 'audifonos', price: 4500},{title: 'borrador', price:3215}])

// Mensajes
db.mensajes.insertMany([{author: "", date: "", text:""},{author: "", date: "", text:""},{author: "", date: "", text:""},{author: "", date: "", text:""},{author: "", date: "", text:""},{author: "", date: "", text:""},{author: "", date: "", text:""},{author: "", date: "", text:""},{author: "", date: "", text:""},{author: "", date: "", text:""}])

* Listar todos los documentos en cada colección. *
db.productos.find()
db.mensajes.find()

* Mostrar la cantidad de documentos almacenados en cada una de ellas *
db.productos.countDocuments()
db.mensajes.countDocuments()

* Realizar un CRUD sobre la colección de productos: *
    - Agregar un producto más en la colección de productos 
db.productos.insertOne({title: "computador", price: 5000})

    - Realizar una consulta por nombre de producto específico:
db.productos.find({title: "libreta"})

    - Listar los productos con precio menor a 1000 pesos.
db.productos.find({price: { $lt: 1000}})
    - Listar los productos con precio entre los 1000 a 3000 pesos.
db.productos.find({price: {$gte: 1000, $lte: 3000}})
    - Listar los productos con precio mayor a 3000 pesos.
db.productos.find({price: { $gt: 3000}})
    - Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
db.productos.find({},{title:1, _id:0}).sort({price:1}).limit(1).skip(2)

* Hacer una actualización sobre todos los productos, agregando el campo stock a todos *
db.productos.updateMany({},{$set:{stock:100}},{multi:true})

* Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. *
db.productos.updateMany({price: {$gt: 4000}},{$set:{stock:0}},{multi:true})

* Borrar los productos con precio menor a 1000 pesos *
db.productos.deleteMany({price:{$lt:1000}})

* Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.*
db.createUser(
    {
    user: "pepe",
    pwd: "asd456",
    roles: [ { role: "read", db: "ecommerce" } ]
  })